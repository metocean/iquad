// Generated by CoffeeScript 1.9.2
var lnglattotile, quaddy;

quaddy = require('quaddy');

lnglattotile = require('lnglattotile');

module.exports = function(quadtree, key, coordinates, zoom) {
  var bin, i, j, randomindex, randompoint, randomtile, ref, tile;
  for (i = j = 0, ref = coordinates.lon.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
    coordinates.lon[i] = (coordinates.lon[i] + 180 + 360) % 360 - 180;
    if (Math.abs(coordinates.lat[i]) > 85) {
      continue;
    }
    tile = lnglattotile(coordinates.lon[i], coordinates.lat[i], zoom);
    bin = quadtree.assert(tile[0], tile[1], tile[2]);
    if (bin[key] == null) {
      bin[key] = {};
    }
    bin = bin[key];
    if (bin.count == null) {
      bin.count = 0;
    }
    bin.count++;
    if (bin.indexes == null) {
      bin.indexes = [];
    }
    bin.indexes.push(i);
  }
  quadtree.visit(zoom, 1, function(x, y, z) {
    var count, node;
    bin = quadtree.get(x, y, z);
    if ((bin == null) || (bin[key] == null) || (bin[key].count == null)) {
      return;
    }
    count = bin[key].count;
    node = quaddy.up(x, y, z);
    bin = quadtree.assert(node[0], node[1], node[2]);
    if (bin[key] == null) {
      bin[key] = {
        count: 0
      };
    } else if (bin[key].count == null) {
      bin[key].count = 0;
    }
    return bin[key].count += count;
  });
  randomindex = Math.floor(Math.random() * (coordinates.lon.length - 1));
  randompoint = [parseFloat(coordinates.lon[randomindex].toFixed(2)), parseFloat(coordinates.lat[randomindex].toFixed(2))];
  randomtile = lnglattotile(randompoint[0], randompoint[1], zoom);
  console.log("  index: " + (JSON.stringify(randomindex)));
  console.log("  point: " + (JSON.stringify(randompoint)));
  return console.log("  tile: " + (JSON.stringify(randomtile)));
};
