// Generated by CoffeeScript 1.9.2
var lnglattotile, quaddy;

quaddy = require('quaddy');

lnglattotile = require('lnglattotile');

module.exports = function(coordinates, zoom) {
  var bin, i, j, randomindex, randompoint, randomtile, ref, result, tile;
  result = quaddy.preallocate(zoom);
  for (i = j = 0, ref = coordinates.lon.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
    coordinates.lon[i] = (coordinates.lon[i] + 180 + 360) % 360 - 180;
    if (Math.abs(coordinates.lat[i]) > 85) {
      continue;
    }
    tile = lnglattotile(coordinates.lon[i], coordinates.lat[i], zoom);
    bin = result.assert(tile[0], tile[1], tile[2]);
    if (bin.count == null) {
      bin.count = 0;
    }
    bin.count++;
    if (bin.indexes == null) {
      bin.indexes = [];
    }
    bin.indexes.push(i);
  }
  result.visit(zoom - 1, 0, function(x, y, z) {
    var count, k, len, node, ref1, ref2, ref3;
    count = 0;
    ref1 = quaddy.down(x, y, z);
    for (k = 0, len = ref1.length; k < len; k++) {
      node = ref1[k];
      count += (ref2 = (ref3 = result.get(node[0], node[1], node[2])) != null ? ref3.count : void 0) != null ? ref2 : 0;
    }
    if (count === 0) {
      return;
    }
    bin = result.assert(x, y, z);
    return bin.count = count;
  });
  randomindex = Math.floor(Math.random() * (coordinates.lon.length - 1));
  randompoint = [parseFloat(coordinates.lon[randomindex].toFixed(2)), parseFloat(coordinates.lat[randomindex].toFixed(2))];
  randomtile = lnglattotile(randompoint[0], randompoint[1], zoom);
  console.log(randomindex);
  console.log(randompoint);
  console.log(randomtile);
  return result;
};
